// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id Int @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    email String @unique
    password String 
    name String? @unique

    avatarPath String? @default("/src/photos/1687534480_sneg-top-p-avatarki-dlya-chata-klassa-pinterest-2.jpg") @map("avatar_path")
    phone String @default("")

    rewiews Rewiew[] 
    orders Order[]
    carts  OrderItems[]
    favorites Product[]
}

model Product {
    id Int @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    name String @unique
    slug String? 
    description String
    price Int
    images String[]

    category Category? @relation(fields: [categoryId], references: [id])
    categoryId Int? @map("category_id")

    user User? @relation(fields: [userId], references: [id])
    userId Int? @map("user_id")

     OrderItems  OrderItems[]
}

model Category {
    id Int @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    name String @unique
    slug String @unique
    products Product[]
}

model Rewiew {
  id Int @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    raiting Int
    text String
    order String

    user User @relation(fields: [userId], references: [id])
    userId Int
}

model Order {
    id Int @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")  

    status OrderStatus @default(PENDING)

     OrderItems  OrderItems[]
    user User @relation(fields: [userId], references: [id])
    userId Int @map("user_id")
}

model  OrderItems {
    id Int @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    price Int
    quantity Int
    text String?
    script String?
    color String?
    name String?

    order Order? @relation(fields: [orderId], references: [id])
    orderId Int? @map("order_id")

    product Product? @relation(fields: [productId], references: [id])
    productId Int? @map("product_id")

    user User? @relation(fields: [userId], references: [id])
    userId Int? @map("user_id")
}


enum OrderStatus {
  PENDING
  PAYED
  SHIPPED
  DELIVERED
}